<!-- Generated using CodeNarc 2.2.1 -->
<rules>
  <!-- ecocode rules -->

  <!-- since 2.2.1 -->
  <rule>
    <key>org.codenarc.rule.ecocode.FatAppRule</key>
    <severity>MINOR</severity>
    <name><![CDATA[Fat App]]></name>
    <internalKey><![CDATA[FatApp]]></internalKey>
    <description><![CDATA[<p>Using &quot;multiDexEnabled true&quot; goes against the overall reduction of the weight of the apps and hence must be avoided.</p>
<p>Example of violations:</p>
<pre><code>    android {
        compileSdk 32

        defaultConfig {
            applicationId &quot;com.example.sampleForSonar&quot;
            minSdkVersion 28
            targetSdkVersion 32
            versionCode 1
            versionName &quot;1.0&quot;
            multiDexEnabled true


            testInstrumentationRunner &quot;androidx.test.runner.AndroidJUnitRunner&quot;
        }

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
        buildFeatures {
            viewBinding true
        }
    }
</code></pre>
]]></description>
    <tag>code-smell</tag>
  </rule>

  <!-- since 2.2.1 -->
  <rule>
    <key>org.codenarc.rule.ecocode.SupportedVersionRangeRule</key>
    <severity>MINOR</severity>
    <name><![CDATA[Supported Version Range]]></name>
    <internalKey><![CDATA[SupportedVersionRange]]></internalKey>
    <description><![CDATA[<p>When looking at the minSdkVersion and targetSdkVersion attributes for the <uses-sdk> in the AndroidManifest.xml file, the amplitude of supported platform versions should not be too wide, at the risk of making the app too heavy to handle all cases.</p>
<p>Example of violations:</p>
<pre><code>android {
    compileSdk 32

    defaultConfig {
        applicationId &quot;com.example.sampleForSonar&quot;
        minSdkVersion 26
        targetSdkVersion 31
        versionCode 1
        versionName &quot;1.0&quot;

        testInstrumentationRunner &quot;androidx.test.runner.AndroidJUnitRunner&quot;
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
}
</code></pre>
]]></description>
    <tag>code-smell</tag>
  </rule>

  <!-- since 2.2.3 -->
  <rule>
    <key>org.codenarc.rule.ecocode.DisableObfuscationRule</key>
    <severity>MINOR</severity>
    <name><![CDATA[Disable Obfuscation]]></name>
    <internalKey><![CDATA[DisableObfuscation]]></internalKey>
    <description><![CDATA[<p>Using minifyEnabled true will obfuscate code and will have a sligthly negative impact on power consumption at runtime.</p>
<p>Example of violations:</p>
<pre><code>    android {
        compileSdk 32

        defaultConfig {
            applicationId &quot;com.example.sampleForSonar&quot;
            minSdkVersion 28
            targetSdkVersion 32
            versionCode 1
            versionName &quot;1.0&quot;
            testInstrumentationRunner &quot;androidx.test.runner.AndroidJUnitRunner&quot;
        }

        buildTypes {
            release {
                minifyEnabled true
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
        buildFeatures {
            viewBinding true
        }
    }
</code></pre>
]]></description>
    <tag>code-smell</tag>
  </rule>

</rules>
